https://leetcode-cn.com/problems/permutations/

知识点：
框架：

result = []
def backtrack(路径, 选择列表):
    if 满足结束条件:
        result.add(路径)
        return
    
    for 选择 in 选择列表:
        做选择
        backtrack(路径, 选择列表)
        撤销选择


代码：
class Solution {
public:
    vector<vector<int>> permute(vector<int>& nums) {
        int n = nums.size();
        vector<vector<int> > v;//存放所有答案
        vector<int> track;//存放一个答案
        backtrack(v,nums,track);
        return v;
    }

    void backtrack(vector<vector<int>>& v,vector<int>& nums,vector<int>& track){
        if(track.size()==nums.size()) {
            v.push_back(track);
            return;
        }//如果满了，说明是答案，写入
        for(int i = 0; i < nums.size(); ++i){
            vector<int>::iterator it = find(track.begin(),track.end(),nums[i]);
            if(it != track.end()) continue;//如果重复了，跳出循环
            track.push_back(nums[i]);
            backtrack(v,nums,track);//下一层
            track.pop_back();
        }
        return;//上一层

    }

};
